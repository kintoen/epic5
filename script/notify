# notify.irc: a module to detect the presence of nicknames
#
# written by nsx
#
# /set variables this script uses:
#
#   NOTIFY -- turns notify system on or off
#
#   NOTIFY_INTERVAL -- how often (in seconds) to check for signons and signoffs
#
#   NOTIFY_USERHOST_AUTOMATIC -- if set on, userhosts will be displayed in
#                                the signon messages (this can lag you if you
#                                have a very large notify list)
#
#   WANT_NICK -- if this nickname becomes available, your nickname will
#                automatically be changed to this nickname (this is similar
#                to the 'orignick' feature found in some scripts)
#
# note: this script uses the serial number 100 for its serial hooks
#

package notify.irc


# global config vars
@notify = [ON]
@notify_interval = 30
@notify_userhost_automatic = [ON]
@want_nick = []
@ison_req_size = 500


# turn off epic's built-in notify system
on ^set -"NOTIFY *"
set notify off


# *** functions and commands ***

alias change_notify_status (refnum, newstatus, nicklist) {
	if (newstatus == [online]) {
		push online_list[$refnum] $nicklist

		if (notify_userhost_automatic == [on]) {
			xeval -server $refnum {
				wait for {
					fe ($nicklist) n1 n2 n3 n4 n5 {
						userhost $n1 $n2 $n3 $n4 $n5 -cmd {
							if ([$4] == [<UNKNOWN>]) {
								xecho -b -w $serv_win() -- Signon by $0 \(\) detected
							} else {
								xecho -b -w $serv_win() -- Signon by $0 \($3@$4\) detected
							}
						}
					}
				}
			}
		} else {
			fe ($nicklist) nickname {
				xecho -b -w $serv_win() -- Signon by $nickname detected
			}
		}

		if (np_in_progress[$refnum] == 1) {
			push ob_signons[$refnum] $nicklist
		}
	} elsif (newstatus == [offline]) {
		@online_list[$refnum] = remws($nicklist / $online_list[$refnum]))
		fe ($nicklist) nickname {
			xecho -b -w $serv_win() -- Signoff by $nickname detected
		}

		if (np_in_progress[$refnum] == 1) {
			push ob_signoffs[$refnum] $nicklist
		}
	}
}

alias clear_notify_list {
	@notify_list = []

	fe ($myservers()) serv {
		@online_list[$servernum($serv)] = []
	}
}

alias clear_notify_records {
	fe ($myservers()) serv {
		@:refnum = servernum($serv)
		@np_in_progress[$refnum] = []
		@ison_hist[$refnum] = []
	}
}

alias detect_signons {
	@:ison_send_list = notify_list

	if (findw($want_nick $notify_list) == -1 && want_nick != []) {
		push ison_send_list $want_nick
	}

	if (ison_send_list == []) {
		return
	}

	fe ($myservers()) serv {
		@:refnum = servernum($serv)

		if (np_in_progress[$refnum] == 1) {
			continue
		}

		@ob_signoffs[$refnum] = []
		@ob_signons[$refnum] = []
		@ison[$refnum] = []

		xeval -server $refnum {
			//ison $ison_send_list$()
		}

		repeat ${((@notify_list + @want_nick) / (ison_req_size + 1)) + 1} push ison_hist[$refnum] n

		@np_in_progress[$refnum] = 1
	}
}

alias establish_notify_hooks {
	^on #^channel_nick 100 "*" {
		@:refnum = servernum()
		@:online_list = online_list[$refnum]
		@:offline_list = remws($online_list / $notify_list)

		if ([$1] == want_nick && N != want_nick) {
			//nick $want_nick
		}

		if (findw($1 $online_list) != -1) {
			@change_notify_status($refnum offline $1)
		}

		if (findw($2 $offline_list) != -1) {
			@change_notify_status($refnum online $2)
		}
	}

	^on #^channel_signoff 100 "*" {
		@:refnum = servernum()

		if ([$1] == want_nick && N != want_nick) {
			//nick $want_nick
		}

		if (findw($1 $online_list[$refnum]) != -1) {
			@change_notify_status($refnum offline $1)
		}
	}

	^on #^join 100 "*" {
		@:refnum = servernum()
		@:offline_list = remws($online_list[$refnum] / $notify_list)

		if (findw($0 $offline_list) != -1) {
			@change_notify_status($refnum online $0)
		}
	}

	^on #^msg 100 "*" {
		@:refnum = servernum()
		@:offline_list = remws($online_list[$refnum] / $notify_list)

		if (findw($0 $offline_list) != -1) {
			@change_notify_status($refnum online $0)
		}
	}

	^on #^notice 100 "*" {
		@:refnum = servernum()
		@:offline_list = remws($online_list[$refnum] / $notify_list)

		if (findw($0 $offline_list) != -1) {
			@change_notify_status($refnum online $0)
		}
	}

	^on #^server_lost 100 "*" {
		@:refnum = [$0]

		@ison_hist[$refnum] = []
		@np_in_progress[$refnum] = 0
	}

	^on #^003 100 "*" {
		@:refnum = servernum()

		@ison_hist[$refnum] = []
		@np_in_progress[$refnum] = 0
	}

	^on ^303 "*" {
		@:refnum = servernum()
		@:ison_type = left(1 $ison_hist[$refnum])
		@ison_hist[$refnum] = restw($ison_hist[$refnum])

		if (ison_type == [n]) {
			push ison[$refnum] $*

			if (index(n $ison_hist[$refnum]) == -1) {
				@process_ison_reply($refnum $ison_list[$refnum])
			}
		} else {
			xecho -b -w $serv_win() online: $*
		}
	}

	^on #^401 100 "*" {
		@:refnum = servernum()

		if (findw($1 $online_list[$refnum]) != -1) {
			@change_notify_status($refnum offline $1)
		}
	}
}

alias ison (nicklist) {
	repeat ${(@nicklist / (ison_req_size + 1)) + 1} push ison_hist[$servernum()] m
	//ison $nicklist
}

alias notify (nicklist) {
	@:online_list = online_list[$servernum()]
	@:offline_list = remws($online_list / $notify_list)

	if (nicklist == []) {
		xecho -b -w $serv_win() -- Currently online: $online_list
		xecho -b -w $serv_win() -- Currently offline: $offline_list

		return
	}

	if (nicklist == [-]) {
		@clear_notify_list()

		xecho -b -w $serv_win() -- the notify list has been cleared
		return
	}

	fe ($nicklist) nickname {
		if (left(1 $nickname) == [-]) {
			@:nickname = rest($nickname)

			if (findw($nickname $notify_list) != -1) {
				@remove_notify_entry($nickname)

				xecho -b -w 1 -- $nickname has been removed from the notify list
			} else {
				xecho -b -w 1 -- $nickname is not in the notify list!
			}
		} else {
			if (findw($nickname $notify_list) == -1) {
				push notify_list $nickname

				xecho -b -w 1 -- $nickname has been added to the notify list
			} else {
				xecho -b -w 1 -- $nickname is already in the notify list!
			}
		}
	}

	@detect_signons()
}

alias process_ison_reply (refnum, ison_list) {
	@:new_offline_nicks = []
	@:new_online_nicks = []
	@:online_list = online_list[$refnum]
	@:offline_list = remws($online_list / $notify_list)
	@:ison_list = remws($ob_signoffs[$refnum] / $ison[$refnum])

	push ison_list $ob_signons[$refnum]

	if (findw($want_nick $ison_list) == -1 && N != want_nick) {
		//nick $want_nick
	}

	fe ($offline_list) nickname {
		if (findw($nickname $ison_list) != -1) {
			push new_online_nicks $nickname
		}
	}

	fe ($online_list) nickname {
		if (findw($nickname $ison_list) == -1) {
			push new_offline_nicks $nickname
		}
	}

	if (new_offline_nicks != []) {
		@change_notify_status($refnum offline $new_offline_nicks)
	}

	if (new_online_nicks != []) {
		@change_notify_status($refnum online $new_online_nicks)
	}

	@np_in_progress[$refnum] = 0
}

alias remove_notify_entry (nickname) {
	@notify_list = remw($nickname $notify_list)

	fe ($myservers()) serv {
		@:refnum = servernum($serv)
		@:online_list[$refnum] = remw($nickname $online_list[$refnum])
	}
}

alias remove_notify_hooks {
	^on #^channel_nick 100 -"*"
	^on #^channel_signoff 100 -"*"
	^on #^join 100 -"*"
	^on #^msg 100 -"*"
	^on #^notice 100 -"*"
	^on #^server_lost 100 -"*"
	^on #^003 100 -"*"
	^on ^303 -"*"
	^on #^401 100 -"*"
}

alias serv_win (refnum) {
	@:win_max = [255]
	@:i = [1]

	if (refnum == []) {
		@:refnum = servernum()
	}

	while (i < win_max) {
		if (winserv($i) == refnum) {
			return $i
		}

		@:i++
	}
}


on ^set "NOTIFY *" {
	if ([$1] == []) {
		xecho -b Current value of NOTIFY is $notify
	} elsif ([$1] == [off]) {
		@notify = [off]

		^timer -del notcheck
		@remove_notify_hooks()

		xecho -b Value of NOTIFY set to OFF
	} elsif ([$1] == [on]) {
		@notify = [on]

		@clear_notify_records()
		@establish_notify_hooks()
		^eval timer -refnum notcheck -rep -1 $notify_interval @detect_signons()

		xecho -b Value of NOTIFY set to ON
	} else {
		xecho -b Value of NOTIFY must be ON or OFF
	}
}

on ^set "NOTIFY_INTERVAL *" {
	if ([$1] == []) {
		xecho -b Current value of NOTIFY_INTERVAL is $notify_interval
	} elsif (!isnumber($1)) {
		xecho -b Value of NOTIFY_INTERVAL must be numeric!
	} elsif ([$1] < 1) {
		xecho -b Value of NOTIFY_INTERVAL must be greater than or equal to 1
	} else {
		@notify_interval = [$1]

		^timer -del notcheck
		^eval timer -refnum notcheck -rep -1 $notify_interval @detect_signons()

		xecho -b Value of NOTIFY_INTERVAL set to $notify_interval
	}
}

on ^set "NOTIFY_USERHOST_AUTOMATIC *" {
	if ([$1] == []) {
		xecho -b Current value of NOTIFY_USERHOST_AUTOMATIC is $notify_userhost_automatic
	} elsif ([$1] == [off]) {
		@notify_userhost_automatic = [OFF]
		xecho -b Value of NOTIFY_USERHOST_AUTOMATIC set to OFF
	} elsif ([$1] == [on]) {
		@notify_userhost_automatic = [ON]
		xecho -b Value of NOTIFY_USERHOST_AUTOMATIC set to ON
	} else {
		xecho -b Value of NOTIFY_USERHOST_AUTOMATIC must be ON or OFF
	}
}

on ^set "WANT_NICK *" {
	if ([$1] == []) {
		if (want_nick == []) {
			xecho -b No value for WANT_NICK has been set
		} else {
			xecho -b Current value of WANT_NICK is $want_nick
		}
	} elsif ([$1] == [<unset>]) {
		@want_nick = []

		xecho -b Value of WANT_NICK set to <EMPTY>
	} else {
		@want_nick = [$1]

		xecho -b Value of WANT_NICK set to $want_nick

		if (N != want_nick) {
			@detect_signons()
		}
	}
}

@clear_notify_list()
@clear_notify_records()
@establish_notify_hooks()
@detect_signons()
^eval timer -refnum notcheck -rep -1 $notify_interval @detect_signons()
