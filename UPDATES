EPIC5-0.1

*** News 01/07/2004 -- Removal of WINDOW BIND feature
	As part of the larger project to decouple windows from channels,
	the "window bind" feature has been removed.  This means you can 
	no longer /WINDOW BIND, /WINDOW REBIND, /WINDOW UNBIND, and you 
	cannot use $windowctl(* BIND_CHANNEL *).  It is expected that 
	eventually scripts will take over the job of routing channels to 
	the appropriate windows and EPIC will stay entirely out of the way.

*** News 01/07/2004 -- New /ON, /ON SERVER_STATUS
	This /ON is thrown every time a server changes its "state".
	The states are listed below in "Server States" and I won't
	go into that again here.
		$0 - The server changing state
		$1 - The old status (a string, not a number)
		$2 - The new status
	If you find that you do something particularly onerous in 
	this /ON and EPIC panics or crashes, try /DEFERing it, and
	if that doesn't work either, let me know.

*** News 01/07/2004 -- Removal of NOTE support
	I doubt anyone will notice this, and if you do, bummer.

*** News 01/07/2004 -- Server states
	<This is a big deal to document this properly.   Stay tuned>

*** News 01/07/2004 -- Channels are not tracked across disconnects
	When you are disconnected from a server for *any* reason, EPIC
	will not retain knowledge of the channels for the next connection
	and will not rejoin them.  It is expected that scripts will use
	this to their advantage to fully control the semantics you will
	have governing "auto-rejoin-on-reconnect".

*** News 01/07/2004 -- Server connections are now brought up asynchronously
	When you do /WINDOW SERVER or /SERVER or otherwise change the
	server of a window, the server is not immediately connected or
	disconnected, and the change will not take effect until the
	next time through the event looper.  This means that all server
	connections are "asychronous" (they don't interrupt the current
	flow of the script).  This means you most definitely cannot
	do /WINDOW SERVER <host> CHANNEL <channel> any more.  So please
	stop doing that. ;-)  Use /ON SERVER_STATUS to join channels.

*** News 01/07/2004 -- /XDEBUG SERVER_CONNECT a lot more interesting
	If you want to watch epic work its gory nonblocking connects,
	you can turn on this /xdebug and see everything in its glory.

*** News 01/07/2004 -- Nonblocking server connects
	EPIC now does all server connections using asynchronous, 
	nonrecursive, nonblocking connections.  And yes, it still 
	supports multiple protocols and multiple addresses (ie, 
	"us.undernet.org"), and *yes*, it will try another address if 
	a server refuses us registration ("You do not have access to 
	this server").

*** News 01/07/2004 -- EPIC no longer tracks server "dialect" per se
	The $version() string now always returns "2.8" since all 
	servers are nominally 2.8 class (rfc1459) servers, and epic
	does not attempt to determine if it's an undernet, ircnet,
	efnet, or dalnet server, etc.  This is mostly because scripts
	can hook /on 004 if they care, and the 005 numeric (ISUPPORT)
	is making dependance on the server's version much less important.

*** News 01/07/2004 -- EPIC loads ~/.ircrc (or ~/.epicrc) on 001 now
	Traditionally, ircII has loaded your ircrc when it received 
	the 002 numeric, and traditionally, epic has done it when it
	received the 004 numeric.  Due to some refactoring in epic,
	it is now possible for epic to load your ircrc when it receives
	the 001 numeric *and before it hooks /on 001*  This means you 
	shouldn't have to suffer the default epic output for any of
	the numerics from the server.

*** News 01/07/2004 -- Usermodes now tracked as strings instead of bits
	Before this change, ircII clients had always tracked your user
	and channel modes as bits, and the valid (supported) modes were
	hardcoded into the client at compile time.  With this change, 
	EPIC will no longer track your modes using bits, but instead 
	using strings.  This means that epic won't need source code
	changes to support new modes from your server.  You can't do
	$serverctl(SET|GET <refnum> UMODES) any more (but the old
	"UMODE" still works)

*** News 01/07/2004 -- /ON wildcard patterns now compiled into regexes
	At or around this date, EPIC started converting wildcard patterns
	used by /ON into extended POSIX regexes and compiling them, and
	using the regexes instead of the pattern matcher.  In the future,
	epic will allow you to specify your own regexes.  "Flexible"
	/on hooks are still wildcard pattern matched (for now) because
	recompiling the pattern every time the /on is thrown is senseless.

*** News -- 12/16/2003 -- New levels, KICK, QUIT, and MODE
	So just for a canonical list, here are all of the levels supported
	by flood, ignore, lastlog, and windows:
		CRAP	PUBLIC	MSG	NOTICE	WALL	WALLOP
		NOTE	OPNOTE	SNOTE	ACTION	DCC	CTCP
		INVITE	JOIN	NICK	TOPIC	PART	QUIT
		KICK	MODE	USER1	USER2	USER3	USER4
		ALL (special)	NONE (special)	HELP (special)

*** News -- 12/16/2003 -- Unification of ignore, flood, and lastlog levels
	Previously, the ignore, flood, and lastlog levels used the same
	names, but they had different meanings in each subsystem (ie, CRAP 
	in flood was different from CRAP in ignore, and CRAP in lastlog).
	Now all three subsystems use the same levels, all named the same,
	and (more or less) all defined the same.  There are some holes in
	this conversion cause I didn't check every possible combination.
	Report any odd behavior to me so I can fix it.

*** News -- 12/16/2003 -- New noise type for /ON, /ON %TYPE
	The /ON %TYPE modifier acts just like /ON ^TYPE, because it
	suppresses the default action, but it is unlike /ON ^TYPE
	because it does not turn off the display (what /ON ^TYPE
	does is it prefixes all the commands in the ON body with 
	the ^ modifier, which turns off output for that command.)
	This new modifer does not prefix each command with ^, so any
	commands not so prefixed will generate their normal output.	
	The idea is you can use this for /on set's
		/ON %SET "HOLD_MODE *" {WINDOW HOLD_MODE $*}

*** News -- 12/16/2003 -- Removed /SET BEEP_WHEN_AWAY
	This feature can be re-implemented in one line of script:
		/ON #MSG 617 * {IF (A) {BEEP}}

*** News -- 12/16/2003 -- Removed /SET BEEP_ON_MSG
	The /SET BEEP_ON_MSG feature has been removed because it was only
	half-implemented, and even that half didn't work right.  Keep an
	eye out for a scripted re-implementation of this in the future.

*** News -- 12/16/2003 -- Runtime auto-append-of-$* removed
	Historically, the ircII language has allowed you to auto-append
	$* onto the end of an alias at runtime by creating an alias that
	does not refer to any of the command line arguments.  For example,
		/alias m msg
	behaves at runtime as
		/alias m msg $*
	but with a performance penalty.  This behavior has now been removed
	and if you wish to have $* appended to your aliases, you need to 
	change them.  This change would be backwards compatable with epic4.

# End of file
