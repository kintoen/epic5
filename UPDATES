EPIC4-1.2.0

*** News 06/12/2003 -- New built in function, $serverwin([<server refnum>])
	Given an optional server refnum (the current server is the default)
	this function returns the last window connected to the server to be
	made the client's global current window.  The idea of this is to 
	give you a window you can use with /xeval to run a command, or 
	/xecho some text in the context of the correct server.  If you 
	want the "current channel" in an /on, you should do something like
		$winchan($serverwin())
	instead of $C.

*** News 06/12/2003 -- Improvements to epic's source code
	A lot of changes have happened internally to EPIC to improve the
	quality of its source code.  For those of you who know about C,
	the types of things we fixed were:
		1) Const correctness
		2) Bad comparisons of integers of different sign and size.
		3) Used valgrind to find a lot of uninitialized variables
		4) Stopped using all ``unsafe'' functions
		5) Treat all string literals as (const char *) [like #1]
		6) Remove "shadow" variables
		7) Prototype all extern functions, 'static' the rest.

*** News 06/12/2003 -- New configure option, --with-warns
	On some systems (at least on freebsd), the gcc you're using has
	a lot of extra helpful warning flags which you can use to point
	out low-quality code.  If you pass the --with-warns flag to 
	configure, it will turn on most of the useful ones.  If your
	compiler does not support these warnings, do not use this.

*** News 06/12/2003 -- New verb for $dccctl(), "FLAGS"
	This returns an epic internal integer value that indicates some
	values that may be of interest.  The composition of this value
	is undefined and is subject to change.  See dcc.c for more info.
	At the time I wrote this, these are the flags:
		1	dcc is DCC CHAT	
		2	dcc is DCC SEND
		3	dcc is DCC GET
		4	dcc is DCC RAW
		5	dcc is DCC LISTEN
		16	The dcc is inbound (other connects to us)
		32	The dcc is open and active
		64	The dcc is outbound (connect to other)
		128	The dcc is pending deletion
		256	The dcc is bi-directionally open
		512	The dcc has been rejected by either peer.

*** News 06/12/2003 -- New verb for $dccctl(), "HELDTIME" and "HOLDTIME"
	HELDTIME gives you a floating point value for how much time
		the dcc has spent in "hold mode".  When you want to
		calculate kb/s, you want to subtract this number of
		seconds from the total open time.
	HOLDTIME gives you the time that the dcc was last held or unheld,
		depending on the value of $dccctl(GET <refnum> HOLD).

*** News 06/12/2003 -- New arg list qualifier, "QWORD"
	If you do
		alias foobar (arg1 qword 2, ...) {
			...
		}
	it takes "double quoted words" but does not remove any double 
	quotes around the words.  This is in contrast to "DWORD" which 
	does remove them.  Example:

		alias foo1 (arg1 dword 2, ...) {echo $arg1}
		alias foo2 (arg1 qword 2, ...) {echo $arg1}

	/foo1 "one two" "three four" five six
		outputs		one two three four

	/foo2 "one two" "three four" five six
		outputs		"one two" "three four"

*** News 06/12/2003 -- Overhaul of dcc code, full ipv6 support
	The DCC code has been largely rewritten, and should be a lot
	more stable (less prone to crashes) especially when you delete
	or close a DCC connection.  IPv6 support has been fully added
	and it should work completely now with no exceptions.  If you
	have any problems, let me know!

*** News 06/12/2003 -- Changes to channel<->window handling
	Previously, each window was responsible for keeping track of
	what it's current channel was.  This could be a problem if you
	wanted to reconnect, and each channel would rejoin its window,
	but you could never be sure which channel would be the current
	window.  Now, each channel keeps track of whether it is the 
	"current channel", and when you reconnect, all of the current
	channels should stay the same and not change around.

*** News 05/04/2003 -- Change default of /set new_server_lastlog_level
	The new default for /SET NEW_SERVER_LASTLOG_LEVEL is now ALL,-DCC.

*** News 05/04/2003 -- New built in function: $levelwindow()
	Given a lastlog level description, it returns a window for the
	current server that claims any of the specified levels.  If no
	windows for the current server claim the level, -1 is returned.
	Since the DCC level is global to the entire client, that is handled
	specially.

*** News 05/04/2003 -- New built in function: $outputinfo()
	The $outputinfo() function returns either one or two words:
		$0	Current output window level
		$1	Current output target (if any)
	The current output window level may be "NONE" which has the same
	meaning as "CURRENT".

*** News 05/01/2003 -- New command in commandqueues, /timer.ue
	This functions the same as /timer, but won't expand the command
	when it is executed.  It's not quite 100% clean yet.  Don't try
	to execute numbers as commands.

	Also cleaned up /q1cmd to work properly with any input.

*** News 04/10/2003 -- New status expando, %{1}+
	The %+ status expandos returns the empty string (ie, it ignores
	the /set status_mode value) if a channel does not have a mode.
	The %{1}+ status expando will honor /set status_mode, and will
	substitute the empty string for %+.

	Example:  Current channel is #epic, it does not have a mode
		/set status_channel [%C 
		/set status_mode  +%+]
	Then using %C%+ yeilds	[#epic
	And %C%{1}+ yields	[#epic +]

*** News 03/29/2003 -- New /SET, /SET SWITCH_CHANNELS_BETWEEN_WINDOWS
	When this set is ON (default) the SWITCH_CHANNELS key binding
	will have its traditional (legacy) behavior, and will allow you 
	to switch a window's current channel between all of the non-current
	channel windows in all windows connected to the same server.

	When this set is OFF, the SWITCH_CHANNELS key binding will have
	more sensible behavior, allowing you to switch between a window's
	channel list, but without grabbing channels from other windows.

# End of file
