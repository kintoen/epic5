EPIC4 Projects, Bugs, and other Errata:

KNOWN ERRATA (eg, bugs, or unresolved requests):
------------------------------------------------
* A missing 'else' in create_additional_screen causes gnu screen to be
  prefered over X windows.  Should this be fixed, or at least made an option?
  Maybe try X, fall back to gnu screen on failure?
* Should /set beep off suppress stripping of beeps?
* Allegedly 464 numeric shouldn't force a reconnect if we're registered.
* The mangler might expand things more than 3 times -- possible
  interference from the attribute parser?  caused by many ^v's.
* Add /timer -delete_for_window or something to avoid window switch warnings?
* After calling connectory(), try to output meaningful error messages, not 
  just blindly calling my_strerror(errno).
* scrollback/scrollforward/scrollend should be controlled by /window verbs
  and not solely by keybindings.
* /TYPE honors keybindings, and calls edit_char(), but /XTYPE -L does not 
  honor key bindings because it calls input_add_character().
* /DEFER needs to be server-specific.
* The key timeout thing goes off every second -- should only when necessary.
* The check for "sun_len" in <sys/un.h> is bogus and unnecessary since we
  can just use #ifdef HAVE_SA_LEN for that.
* Input cursor wigs out if 2ndary window is < 32 columns wide...
---

[See http://www.epicsol.org/PROJECTS for things to come in the future]
[See http://www.epicsol.org/CHANGELOG for things that changed in the past]

THE CHANGELOG SINCE THE LAST RELEASE:
-------------------------------------
* Fix add_to_logfiles to handle target == NULL properly. doh!
* Add server refnum info to /log list and /log describe
* Fix add_to_logfiles, check for log level was inverted.
* Switch window/status updates from active to passive-repaint.
-- This reduces unecessary/redundant window/status repaints.
* Don't perform useless term_cr()/term_newline() in rite().
* Pass 'foreground', not 1 to output_with_count to determine if output ok.
* Always use window->screen to determine visibility. Whack 'visible' var.
* Rename 'distance_from_display' to 'distance_from_display_ip'
* Break add_to_display_list() into add_to_scrollback()/ok_to_output().
* Check position of cursor and display_ip at end of window_disp().
* Move scrollback trimming to bulk job at end of window_disp().
* Don't perform redundant term_flush() at end of window_disp()
* Screen no longer needs term_flush().
* Don't count lines being held in ok_to_output(). (we can't uncount them)
* Whack obsolete 'holding_something', 'held_displayed' 'lines_displayed'
* Don't use 'scrollback_point', but rather the flag 'autohold'.
* Whack obsolete 'scrollback_point' in (struct window).
* Whack obsolete 'lines_scrolled_back' in (struct window)
* Don't allow output (ie, don't scroll window) (ie, window is "held" in place)
*  If 'hold_mode' (set by /window hold_mode) is on
*  or 'auto_hold' (set by SCROLL_*) is on
* When output is held, you can only move window with scrollback operations.
* Fix input.c to call cursor_not_in_display after moving cursor. duh.
* Fix screen.c to call cursor_in_display after moving cursor. duh.
* Break repaint_window() into repaint_one_line() and repaint_window_body()
* If 'window->cursor' == -1, that forces redraw of window body.
* repaint_window_body() always redraws entire window body now.
* Whack obsolete 'repaint_start' and 'repaint_end' from (struct window)
* repaint_one_line() repaints just one line upon request.
* Allow /xecho -line on every window (All windows are scratch windows)
* Rename 'scratch_line' to 'change_line' in (struct window).
* Whack obsolete add_to_scratch_window()
* Call update_all_windows() at the end of io() to ensure timely updates.
* Move the "update" #define's from window.h to window.c
* Add window_body_needs_redraw(), replaces REDRAW_DISPLAY_(FULL|FAST).
* Whack no-scroll mode for now, it never did work right.	XXX FIXME XXX
* Move add_to_display_list() from screen.c to window.c
* Remove distinction between "held buffer" and "scrollback buffer"
* Whack unhold_a_window() and unhold_windows(), no more "hold mode"
* Whack /SET HOLD_MODE -- use /window hold_mode now (shimmed)
* Whack /SET HOLD_INTERVAL -- use /window hold_interval (shimmed)
* /CLEAR -U is presently ignored (fixed)
* /FLUSH doesn't do /WINDOW FLUSH right now (won't fix this)
* Don't unhold after CLEAR_WINDOW and UNCLEAR_WINDOW keybinds. (fixed)
* window.c needs putchar_x() now.
* Add /WINDOW MOVE_TO <num> which moves window to specific location on screen.
* Now when stuff is held when you're in scrollback, you scroll all the way down.
* Rnm 'recalculate_window_cursor' to 'recalculate_window_cursor_and_display_ip'
* Don't unecessarily call cursor_to_input().
* Change last four numbers in geometry info in /WINDOW DESCRIBE
* Fix /WINDOW FLUSH to properly flush everything below bottom of screen
* If you /WINDOW HOLD_MODE OFF it does an /UNCLEAR
* /WINDOW SCRATCH deprecated; takes argument and performs no action.
* /WINDOW SCROLL broken; takes argument and performs no action.
* /WINDOW SCROLLBACK 0 does a /WINDOW FLUSH. (???)
* Add /WINDOW SEARCH_BACK and /WINDOW SEARCH_FORWARD, regex scrollback opers.
* Optimize recycling of display lines to avoid one more malloc/free.
* Major rewrite of the scrollback/forward/start/end implementation.
* Add change_line(), which is used by /xecho -line to rewrite your scrollback.
* Change 'make_status' to take an extra integer argument
* Rename 'status_update' to 'permit_status_update'
* Add window_statusbar_needs_update(), replaces UPDATE_STATUS
* Add window_statusbar_needs_redraw(), replaces REDRAW_STATUS
* Whack (redraw|update)_window_statusbar()
* Don't bother updating statusbars when it's redundant...
* Move logic of whether to calculate status bar into make_status().
* Move logic of whether to force redraw status bar into make_status().
* Whack %B (always empty string) (fixed)
* Change %H so it's on if holding, not if lines held
* Make 'never_connected' static to notice.c
* Don't use 'never_connected' to figure how to display "can't use nick" nums.
* Whack obsolete "redirect" stuff from (struct screen).
* Fix some printf-format issues with /alias /s
* Make sure we don't pass a negative timeout to select().
* Disentagle the key sequence timeout from TimerTimeout().
* If you SCROLL_FORWARD to the very end, do an /unclear for backwards compat.
* Fix /clear -u and /unclear -u to turn off hold mode like they used to.
* Fix CLEAR_SCREEN and UNCLEAR_SCREEN keybindings to turn off hold mode
* Create /set hold_mode(_interval) compat script shims in 'basical'.
* Recalculate the lines_held value when calculating cursor and display_ip.
* Fix the lines_held status bar thingee, now full backwards compat.
* Fix ok_to_output to update status every /window hold_interval lines, not 10.
* Remove K&R support from info.c.sh -- this should make OS X users happy.
* Fix bug with SCROLL_FORWARD after doing SCROLL_START.
* Fix vhost support so you can turn it off at runtime with /HOSTNAME -
* Fix unclear_window() so it calls recalc_cursor_and_display_ip().
* Change expand_twiddle(), path_search() to take results as params, int retval
* Add normalize_filename(), to do job expand_twiddle() used to do.
* Add isdir(), just because
* Change /CD, /LOAD, /SAVE, /DCC SEND, /DCC GET, to use normalize_filename.
* Change /DCC RESUME, $open(), $which(), $unlink() to use normalize_filename.
* Change $rename(), $rmdir(), $fexist(), $fsize() to use normalize_filename.
* Change $glob(), $globi(), $mkdir(), $chmod() to use normalize_filename.
* Change $ftime(), $randread(), and uzfopen() to use normalize_filename.
* Change /LOG, /SET LOGFILE, servers file to use normalize_filename.
* Fix /LOG so maximum number of targets per log is a compile time #define.
* Revamp expand_twiddle() and uzfopen().
* Fix uzfopen() to look for 'bunzip2' in addition to 'bunzip'.
* Fix bug with /QUEUE -delete
* Remove unused variable in window_scroll().
* #include <unistd.h> for configure check for sys_siglist[] for netbsd.
* Experimental fix for $indextoword(), worked out with fudd.
* Fixed a problem in which dccs failed when dcc_store_path was set (ce)
* Fix brain-o that broke /load and a few other non-op changes.
* Fix /dcc send breakage (ce)
* Move calc of window scrollback buffer before add to screen (didn't fix)
* Unify code for /DCC GET and /DCC RESUME (still #ifdef'd and /set off) (ce)
* Add checks/workaround for linux's broken realpath(). Bleh.
* Add arc4random stuff to compat.c -- will be used later!
* Fix $realpath() to use normalize_filename() so it gets realpath() fix.
* Add $serverctl(SET <refnum> PRIMARY) to set primary server.  User beware! 
* Add /set random_source 3, an arc4random random number generator.
* Remove /set suppress_server_motd which didn't really work anyways.
* Add function decls for bsd_arc4* to ircaux.c
* Always check (window->hold_mode || window->autohold) together!
* Unhold_window()s only if both hold_mode and autohold are off!
* unhold_window()s instead of doing scrollback_end for robustness.
* Attempt to recover from the "output is below bottom of window" bug, whine.
* Update copyright notices. erf.
* Fix short circuiting in new math parser not to spuriously error
* #ifdef out all uses of bogus 'ceiling_of_display' for now.
* Pull "initial" part of resize_window_display() into new_window()
* Then forcibly call resize_window_display() to update old_display_size.
* And then call make_window_current() last to make sure window updates there.
* But I think that calling recalc_win_curs_and_disp_ip might be bogus there.
* Fix the recovery from the "output below window" bug.
* Make notes that calling make_window_current() can kill the window.
* Fix /WINDOW NAME so it takes extended-words (/window name "foo bar")
* Add 'get_geom_by_winref()' for $geom(), 'const'ify a few things...
* Fix $geom() so it can take a window refnum as an argument.
* Replace $center() with a better one from epic5.
