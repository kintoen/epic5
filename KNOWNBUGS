EPIC5 Projects, Bugs, and other Errata:

KNOWN ERRATA (eg, bugs, or unresolved requests):
------------------------------------------------
<none>

[See http://www.epicsol.org/PROJECTS for things to come in the future]
[See http://www.epicsol.org/CHANGELOG5 for things that changed in the past]

THE CHANGELOG SINCE THE LAST RELEASE:
-------------------------------------
* Nix auto-append-of-$* feature (args_flag to expand_alias/parse_inline) HUZZAH!
* Fix provided scripts to add $* when necessary.
* Fix up Makefile, configure, et al, to use epic5/ directories.
* Make message_from() work from a queue; call pop_message_from() to GC
* Removed unused variables
* Add /xdebug message_from to watch the message_from queue at work.
* Nix save_message_from(), restore_message_from(), unneeded now.
* Remove /set beep_on_msg, a half-broken feature which can be scripted.
* Nix /set beep_when_away, a 1-line scriptable feature.
* Add new noise level %, (/ON %TYPE); like ^ but doesn't turn off display
* Use message_from() for setting all target/levels
* Nix set_lastlog_message_level(), have lastlog use who_level/who_from now
* Make message_from() use a queue to store old values
* Make everybody pop off their message_from() under pain of panic
* This ensures every output context can be safely interrupted!  HUZZAH!
* Unify the flood, ignore, and lastlog levels.
* *_FLOOD -> LEVEL_*, LOG_* -> LEVEL_*, IGNORE_* -> LEVEL_*
* Add KICK, QUIT, and MODE levels
* Nix #define DEFAULT_BEEP_ON_MSG and #define DEFAULT_BEEP_WHEN_AWAY
* Differentiate between a "mask" (bitmask) and a "level" (integer)
* Don't call them "lastlog levels" any more, they're just "levels"
* Create levels.h, which contain the definitions for all of the level stuff
* Create macro, _X(x) which converts a level name to a mask
* Create macro, _Y(x) which converts a level integer to a mask
* Nix beep_on_level global variable
* Create "Mask" struct which contains an integer to hide a "mask" behind.
* This prevents me from comparing a "mask" to a "level" by mistake.
* Convert many functions and variables to the "Mask" type
* Rename a bunch of functions and variables that use "mask" and not "level"
* Make KICKs, PARTs, QUITs, MODEs, et al use their new special levels!
* All levels now mean everything in every context!  HUZZAH! 
* Make empty_string const.  Now we're cooking with gas! 
* Const correctness madness!
* Compile /ON patterns into regexes and use regexec() to parse them.
* Fix matching of /on type "*" to always have a weight of 1. (rb adm)
* Tack a ^ and $ onto regexes in pattern2regex().
* Flexible hooks need to have 'hook->regexpr' set to NULL to avoid segfault
* commit 1013:
* Use a "status" variable in server, instead of a plurality of binary flags
* Process usermodes as strings only.
* Nix 'flags', 'flags2' and 'umodes', 's_takes_arg', and 'eof'.
* Change update_user_mode() to take a server refnum.
* Nix $serverctl(... UMODES)
* Change server_is_registered() so it takes a server name and our nickname.
* Add server_is_unregistered() which i'll use in the future.
* Hook /on server_lost all the time in close_server() by popular request.
* Make $version() always return "2.8" since all servers are 2.8 servers.
* Check /set auto_rejoin_connect at disconnect-time, instead of connect-time.
* Use a "is_server_active()" function instead of "did_server_rejoin_channels"
* Move the guts of got_initial_version_28() into server_is_registered()
* Call "server_is_registered()" from 001, which loads ircrc among other things.
* Reduce 004 so it only sets the server's version string id.
* Nix got_initial_version_28
* Allow client_connect() to be nonblocking
* Allow Getaddrinfo() and Freeaddrinfo() to be called extern.
* Track writable sockets in 'global_max_fd' too.
* Keep a list of AI's for server addresses in the server code
* When server connection lost before registration, use the next AI
* Implement set_server_status(), which controls where server is in lifetime
* Nix reconnect(), which is replaced by close_server + set_server_status().
* Nix server_reconnects_to(), we no longer reconnect to servers.
* Make /xdebug server_connect the default for this commit at least
* Call window_check_servers() every time through io(), because...
* Make window_check_servers() look for disconnected servers and restart them.
* Add add_mode_to_str() which adds a channel or usermode to a string (sorted)
* Make usermodes use add_mode_to_str()
* Make channel modes use add_mode_to_str()
* Now modes are not stored in bitmasks, not hard-coded at compile time. HUZZAH!
* Nix "inactive" field in channels, channels are thrown away at disconnect
* Don't allow channels to move between servers, natch.
* Nix all the code to handle disconnected channels and such.
* Use change_window_server() to move windows to new servers, because...
* Make window_check_servers() auto-close windowless servers.
* Make change_window_server(<server>, NOSERV) cause a disconnect from <server>
* Don't honor /set auto_reconnect, we don't ever reconnect.
* Fix printf() error in /on kick default output
* Add new server state, SERVER_RECONNECT which means "i can be connected"
* So now SERVER_CLOSED means "don't reconnect me"
* Allow /server, /window server, and /reconnect to change CLOSED -> RECONNECT
* Make server connections nonblocking.
* Server connections are now nonrecursive, nonblocking, multi-protocol. HUZZAH!
* GC a bunch of server code dealing with reconnection we don't use now.
* Don't call window_check_servers() other than io() for sanity reasons.
* Make /window server just change server, let w_c_s() bootstrap connection
* Remove many window->channel->server sanity checks.
* Backslash a bunch of regular pattern chars that are metachars in regexes
* Nix note support
* Revamp notice.c for its eventual assimiliation into parse.c
* Assimilate notice.c into parse.c.  *poof*
* Fix some compiler issues and so forth
* Nix the NOTE level.
* Move load_ircrc() to irc.c, nix "startup_file" global var.
