EPIC4 Projects, Bugs, and other Errata:

KNOWN ERRATA (eg, bugs, or unresolved requests):
------------------------------------------------
* A missing 'else' in create_additional_screen causes gnu screen to be
  prefered over X windows.  Should this be fixed, or at least made an option?
  Maybe try X, fall back to gnu screen on failure?
* Should /set beep off suppress stripping of beeps?
* Allegedly 464 numeric shouldn't force a reconnect if we're registered.
* The mangler might expand things more than 3 times -- possible
  interference from the attribute parser?  caused by many ^v's.
* Add /timer -delete_for_window or something to avoid window switch warnings?
* After calling connectory(), try to output meaningful error messages, not 
  just blindly calling my_strerror(errno).
* scrollback/scrollforward/scrollend should be controlled by /window verbs
  and not solely by keybindings.
* Plus something that scrolls back to a certain word in scrollback, for adm.
* /TYPE honors keybindings, and calls edit_char(), but /XTYPE does not honor
  key bindings because it calls input_add_character().
* Some way to turn off virtual host support (ie, reverse /hostname)

[See http://www.epicsol.org/PROJECTS for things to come in the future]
[See http://www.epicsol.org/CHANGELOG for things that changed in the past]

THE CHANGELOG SINCE THE LAST RELEASE:
-------------------------------------
* Add $killpid() as a favor for Liandrin.
* Really fix wserv this time.
* Add GETADDR_DOES_NOT_DO_AF_UNIX for KAME, which doesn't do AF_UNIX
* Change dcc_raw_connect() to take a string port, not integer
* Add LocalIPv6Addr, for IPv6 virtual hostnames
* Include <sys/stat.h> in irc_std.h.  Clean up elsewhere later.
* Add a bunch of typedefs for IPv6 and stuff.
* Change inet_anyton() to take a port string
* Change connectory() to take a port string, not a number.
* Change my_accept() to Accept()
* Add wrappers for getaddrinfo()/freeaddrinfo(), with first letter in caps.
* Decouple wserv4 from network.c.  Now can do yell() and malloc() in network.c.
* Rip a lot of k-rap out of wserv.c that was there only for network.c
* Add connectory() (such as it is) to wserv.c.
* Change all uses of 'hostname' (a global variable) to 'host'
* Rewrite switch_hostname() to use getaddrinfo() and support IPv6 for virthosts
* Change LocalIPv4Addr/LocalIPv6Addr to pointers, manage in switch_hostname()
* Remove now unused resolv() function.
* Change inet_remotesockaddr() to take a port string, not a number.
* Add IPv6 p-addr support to connectory().  Hostnames still default to IPv4.
* "EPIC_USE_HIGHPORTS" only works for IPv4 now.
* Support IPv6 virtual hosts in inet_vhostsockaddr()
* Add IPv6 support to inet_remotesockaddr()
* Push AF_UNIX support in inet_remotesockaddr() off to Getaddrinfo().
* Convert inet_anyton() to use Getaddrinfo(), which adds IPv6 support.
* Add some comments to help me in the future.
* Change inet_hntop() to inet_anytop(), inet_ptohn() to inet_anytohn().
* Change inet_ntohn() to take a socklen_t, a port buffer/size, and flag arg.
* Change inet_ntohn() to use getnameinfo().
* Create socklen() which takes an (SA *) and returns the sockaddr's size.
* Change dcc inbound connection handler to use extended inet_ntohn() args.
* Change $nametoip()/$iptoname() to use inet_anyto(hn|p).  Some breakage here.
* Nuke lookup_host/lookup_addr, last vestiges of gethostby(name|addr).  HUZZAH!
* Add AF_UNSPEC support to inet_anyton().
* So that means inet_anytop()/inet_anytohn() support ipv6.
* Change/break one_to_another() [$convert()]-- fix this later.
* Simplify Connect() now that we have socklen().
* I never really did like these function names, so...
* Change inet_anytop() to inet_hntop(), but it still does p->p conversion. :/
* Change inet_anytohn() to inet_ptohn(), and it does proper p->hn convert. =)
* Change inet_anyton() to inet_strton(), "any" is too broad
* Change inet_ntohn() to inet_ntostr(), since it does n->p conversions, too!
* Add an extra argument to inet_strton(), passed to getaddrinfo().
* Remember that inet_ntostr() takes one too, passed to getnameinfo().
* Change stuff in dcc.c/functions.c/server.c to accomodate naming changes.
* Invert the logic in connectory() to use inet_remotesockaddr() to get family.
* Fix parse_server_info() to properly handle ipv6 p-addrs
* Add support for [<ipv6 p-addr>] to parse_server_info().
* Fix an off-by-one error in Getaddrinfo.  Bleh.
* Fix a malloc() size mistake in Getaddrinfo.
* Clean up configure.in - remove checks for scandir, inet_aton
* Convert all uses of inet_pton() to inet_strton()
* Convert all uses of inet_ntop() to inet_ntostr()
* Remove checks for inet_pton(), inet_ntop(), gethostbyname2() in configure
* Remove impls of inet_pton(), inet_ntop(), inet_aton() in compat.c
* Alas, inet_strton() must fill in sin_len for 32-bit integer (dcc) case.
* Conversion to getaddrinfo()/getnameinfo() complete.  HUZZAH!
* Make $connect() family independant.
* Add third arg to $connect(), "v4", "v6", or "vu" for IPv4/IPv6/AF_UNSPEC.
* This means $connect(::1 ftp v6) works! (IPv6 support for $connect()) Huzzah!
* Remove the 'family' argument in connectory() in wserv4.
* Remove the (now) obsolete decl of inet_aton() in ircaux.h.
* Allow $iptoname() to accept ipv6 p-addrs as well as ipv4 p-addrs.
* Allow $listen() to take a family argument, like $connect().
* Add some V6 macros in ircaux.h, modeled after V4 macros.
* Add a "family" member to the dcc structure.  Default to AF_INET for now.
* Start fetching ports by calling inet_ntostr() instead of peeking directly
  -- into the sockaddr.  This yields protocol independance.
* Fix bug where $listen() or /dcc send w/o a virtual host caused NULL deref.
* Fix for previous $listen() fix from nsx (ce)
* Fix /ON ODD_SERVER_STUFF to not have a blank server field (ce)
* Fix $chr() so it doesn't have size limits (ce)
* Fix get_time() if #undef HAVE_GETTIMEOFDAY (ce)
* Addition to tabkey.ce (ce)
* Make $listen() and server connections both work at the same time.
* Fix decl for 'need_redraw' which is a volatile.
* Fix NULL deref if you did /window flush in an empty window (rb adm)
* Unbreak larneproofing for /on 367 which was too strict for ircnet. 
* Add Getnameinfo(), front end to getnameinfo() takes GNI_INTEGER for DCC use
* Fix inet_ntostr() to use Getnameinfo() instead of getnameinfo() directly.
* Fix inet_ntostr() to return int for success/failure, not hostname.
* Fix the DCC handshake generator to use inet_ntostr().
* Fix callers of inet_ntostr() to handle integer return values.
* Add support in the DCC handshake generator for IPv6 addrs.
* Fixed NULL deref if you did /FE with no arguments
* Some minor cleanup work in dcc.c, restructure of dcc_open.
* Don't outright restrict DCC handshakes to only IPv4.  Getting closer!
* Fixes to /fe (ce)
* Fix new_next_arg() not to throw away arguments after "" empty argument. (ce)
* Add malloc_strcat_c and m_strcat_ues_c, "clued" versions of base funcs. (ce)
* Fix the variable expansion routines to use the "clued" versions above. (ce)
* Fix "commandqueues" script, move last.qcmd.* -> 1cmd.* (ce)
* Add command completion to 'tabkey.ce' (ce)
* Add /stack [push|pop|list] bind. (wd)
* Trying to get the copyright notices under control now...
* Add support for +D channel mode (rb srgeeo)
* Fix /defer to pass commands to parse_line() instead of parse_command().
* Add support for $* to travel along with /defer
* This permits /defer {command;command;...} to work
* Add "gailib", a "get(addr|name)info" implementation from the WIDE project
* This permits linking on ipv4-only systems. Huzzah!
* Fix a bunch of places where ipv4 systems failed to compile
* Fix compat setenv() so it doesn't depend on m_sprintf().
* Add check for getservbyname() to configure stuff.
* Remove /SET RANDOM_LOCAL_PORTS now that it's gone away.
* Fix some compile issues in gailib.c, ircsig.c, and keys.c
* Add support for 005 numeric in general (ce)
* Add support for CHANMODES, PREFIX, and CHANTYPES from 005 (ce)
* Add support for UMODES from 005, use $serverctl(get x umodes) to fetch (ce)
* Fix /msg @$fd so $fd must be numer, so /msg @#channel works again (ce)
* Add $xdebug(), which returns xdebug vals suitable for use with /xdebug (ce)
* Fix /xdebug where /xdebug -one,two caused both one and two to turn off (ce)
* Fix m_sc3cat_s to call m_c3cat, for optimization purposes (ce)
* Change $which() to call path_search directly (ce)
* Fix $unsplit() to use the clued-string funcs (ce)
* Remove support for UMODES from 005 -- too many servers lie. (ce)
* Add two new scripts 'map', a smart mapper, and 'mail', a mail checker. (wd)
* Fixes to the 'mail' checking script (wd)
* Fix chanmodetype() to trigger map rebuild under more sane (slower) cons. (ce)
* Fix for chanmodetype() from MaXxX.
* Add channel mode +D to the mode parser. (ce)
* Add new test script, 'regress/stat' to test status bar.
* Add new script 'mkpdir' to simulate behavior of 'mkdir -p'
* Swap mIRC colors 5 and 7, because we were using the wrong colors, from MaXxX.
* Make /set term_does_bright_blink work again.
* Make /timer -update more forgiving, so updating nonexistant timer adds it.
  -- But only as long as you specify all the mandatory fields
* Add checks for getaddrinfo() and getnameinfo() in configure.  Oops
* Now ipv6 connections to servers work!
* Fix $ischannel() so $ischannel() (ie, no args) returns 0 (wd)
* Fix $killpid() so you can $killpid(0 <pid>), rb liandrin
* Fix warning for /set dcc_use_gateway_addr to not confuse ipv6 server users.
* Change warning that unknown channel modes are not "error" but "type D" (ce)
* Rewrote keys.c, completely overhauled the keybinding system. (wd)
