i'm contemplating whether i should have one hardcoded rule which
+models the traditiional efnet model, or if i shoudl generalize it and make
+you fill out complicated /set's that would permit a wide variety of flooding
+models.

eg, "score for each byte", "score for each line", "Time Interval in
+milliseconds", "Reduction of score per time interval", "Score above which to
+throttle"

then, for each line you send to the server, it will calculate a
+"score" for that line, based on its length and a flat "per line" score.  The
+line will be sent to the server and a counter will be incremented.

after every certain milliseconds, the counter will be decremented
+by the specified amount.

if, when a line is sent to the server, the current counter is
+greater than the thresshold, the line will be queued (throttled) instead of
+dispatched.

that way, i can create a timer that will fire but only when you're
+flooding.

that's the generalized solution.

the more (efnet specific) solution is just to prohibit you from
+sending more than 2 lines per second.

